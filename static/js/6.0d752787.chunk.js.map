{"version":3,"sources":["components/Chart/index.jsx","pages/Reportes.jsx","components/Layout/index.jsx","components/Button/styles.js","components/Button/index.jsx"],"names":["Chart","BarSeries","VerticalBarSeries","className","xType","stackBy","width","height","style","position","left","top","orientation","items","title","color","cluster","data","x","y","Reportes","pdfRef","useRef","Layout","Row","Col","ref","targetRef","filename","toPdf","Button","onClick","text","children","prototype","PropTypes","element","isRequired","Btn","styled","Spinn","Spinner","size","variant","isActive","isLoading","disabled","as","animation","role","aria-hidden","string","bool","func"],"mappings":"gLAYaA,EAAQ,WACnB,IAAMC,EAAYC,IAElB,OACE,kBAAC,IAAD,CACEC,UAAU,sCACVC,MAAM,UACNC,QAAQ,IACRC,MAAO,IACPC,OAAQ,KAER,kBAAC,IAAD,CACEC,MAAO,CAAEC,SAAU,WAAYC,KAAM,OAAQC,IAAK,QAClDC,YAAY,aACZC,MAAO,CACL,CACEC,MAAO,oBACPC,MAAO,WAET,CACED,MAAO,oBACPC,MAAO,cAIb,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAACd,EAAD,CACEe,QAAQ,OACRD,MAAM,UACNE,KAAM,CACJ,CAAEC,EAAG,KAAMC,EAAG,IACd,CAAED,EAAG,KAAMC,EAAG,GACd,CAAED,EAAG,KAAMC,EAAG,IACd,CAAED,EAAG,KAAMC,EAAG,OAGlB,kBAAClB,EAAD,CACEe,QAAQ,OACRD,MAAM,UACNE,KAAM,CACJ,CAAEC,EAAG,KAAMC,EAAG,GACd,CAAED,EAAG,KAAMC,EAAG,GACd,CAAED,EAAG,KAAMC,EAAG,GACd,CAAED,EAAG,KAAMC,EAAG,MAGlB,kBAAClB,EAAD,CACEe,QAAQ,OACRD,MAAM,UACNE,KAAM,CACJ,CAAEC,EAAG,KAAMC,EAAG,GACd,CAAED,EAAG,KAAMC,EAAG,GACd,CAAED,EAAG,KAAMC,EAAG,IACd,CAAED,EAAG,KAAMC,EAAG,OAGlB,kBAAClB,EAAD,CACEe,QAAQ,OACRD,MAAM,UACNE,KAAM,CACJ,CAAEC,EAAG,KAAMC,EAAG,IACd,CAAED,EAAG,KAAMC,EAAG,GACd,CAAED,EAAG,KAAMC,EAAG,IACd,CAAED,EAAG,KAAMC,EAAG,S,2CChDTC,UAtBE,WACf,IAAMC,EAASC,iBAAO,MACtB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,yBAAKC,IAAKL,GACR,wBAAIlB,UAAU,eAAd,WACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QAGJ,kBAACsB,EAAA,EAAD,KACE,kBAAC,IAAD,CAAKE,UAAWN,EAAQO,SAAS,gBAC9B,gBAAGC,EAAH,EAAGA,MAAH,OAAe,kBAACC,EAAA,EAAD,CAAQC,QAASF,EAAOG,KAAK,yB,gCCtBzD,gFAIaT,EAAS,SAAC,GAAkB,IAAhBU,EAAe,EAAfA,SACvB,OAAO,kBAAC,IAAD,KAAYA,EAAZ,MAGTV,EAAOW,UAAY,CACjBD,SAAUE,IAAUC,QAAQC,a,uUCNvB,IAAMC,EAAMC,YAAOT,IAAPS,CAAH,KAOHC,EAAQD,YAAOE,IAAPF,CAAH,K,iBCNLT,EAAS,SAAC,GAAD,IACpBE,EADoB,EACpBA,KACAU,EAFoB,EAEpBA,KACAC,EAHoB,EAGpBA,QACAC,EAJoB,EAIpBA,SACAC,EALoB,EAKpBA,UACAd,EANoB,EAMpBA,QANoB,OAQpB,kBAACO,EAAD,CACEK,QAASA,GAAW,UACpBD,KAAMA,EACNI,SAAUF,GAAaC,IAAa,EACpCd,QAASA,GAERc,EACC,kBAAC,WAAD,KACE,kBAACL,EAAD,CACEO,GAAG,OACHC,UAAU,OACVN,KAAK,KACLO,KAAK,SACLC,cAAY,SANhB,eAWAlB,IAKNF,EAAOI,UAAY,CACjBF,KAAMG,IAAUgB,OAChBT,KAAMP,IAAUgB,OAChBR,QAASR,IAAUgB,OACnBP,SAAUT,IAAUiB,KACpBrB,QAASI,IAAUkB","file":"static/js/6.0d752787.chunk.js","sourcesContent":["import React from 'react'\r\nimport 'react-vis/dist/style.css'\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  VerticalGridLines,\r\n  HorizontalGridLines,\r\n  VerticalBarSeries,\r\n  DiscreteColorLegend,\r\n} from 'react-vis'\r\n\r\nexport const Chart = () => {\r\n  const BarSeries = VerticalBarSeries\r\n\r\n  return (\r\n    <XYPlot\r\n      className=\"clustered-stacked-bar-chart-example\"\r\n      xType=\"ordinal\"\r\n      stackBy=\"y\"\r\n      width={600}\r\n      height={600}\r\n    >\r\n      <DiscreteColorLegend\r\n        style={{ position: 'absolute', left: '50px', top: '10px' }}\r\n        orientation=\"horizontal\"\r\n        items={[\r\n          {\r\n            title: 'Ventas sin chaski',\r\n            color: '#12939A',\r\n          },\r\n          {\r\n            title: 'Ventas con chaski',\r\n            color: '#79C7E3',\r\n          },\r\n        ]}\r\n      />\r\n      <VerticalGridLines />\r\n      <HorizontalGridLines />\r\n      <XAxis />\r\n      <YAxis />\r\n      <BarSeries\r\n        cluster=\"2015\"\r\n        color=\"#12939A\"\r\n        data={[\r\n          { x: 'Q1', y: 10 },\r\n          { x: 'Q2', y: 5 },\r\n          { x: 'Q3', y: 15 },\r\n          { x: 'Q4', y: 20 },\r\n        ]}\r\n      />\r\n      <BarSeries\r\n        cluster=\"2015\"\r\n        color=\"#79C7E3\"\r\n        data={[\r\n          { x: 'Q1', y: 3 },\r\n          { x: 'Q2', y: 7 },\r\n          { x: 'Q3', y: 2 },\r\n          { x: 'Q4', y: 1 },\r\n        ]}\r\n      />\r\n      <BarSeries\r\n        cluster=\"2016\"\r\n        color=\"#12939A\"\r\n        data={[\r\n          { x: 'Q1', y: 3 },\r\n          { x: 'Q2', y: 8 },\r\n          { x: 'Q3', y: 11 },\r\n          { x: 'Q4', y: 19 },\r\n        ]}\r\n      />\r\n      <BarSeries\r\n        cluster=\"2016\"\r\n        color=\"#79C7E3\"\r\n        data={[\r\n          { x: 'Q1', y: 22 },\r\n          { x: 'Q2', y: 2 },\r\n          { x: 'Q3', y: 22 },\r\n          { x: 'Q4', y: 18 },\r\n        ]}\r\n      />\r\n    </XYPlot>\r\n  )\r\n}\r\n","import React, { useRef } from 'react'\r\nimport { Layout } from '../components/Layout'\r\nimport 'react-vis/dist/style.css'\r\nimport { Chart } from '../components/Chart'\r\nimport Pdf from 'react-to-pdf'\r\nimport { Button } from '../components/Button'\r\nimport { Row, Col } from 'react-bootstrap'\r\n\r\nconst Reportes = () => {\r\n  const pdfRef = useRef(null)\r\n  return (\r\n    <Layout>\r\n      <Row>\r\n        <Col>\r\n          <div ref={pdfRef}>\r\n            <h1 className=\"text-center\">Informe</h1>\r\n            <Chart />\r\n            <Chart />\r\n          </div>\r\n        </Col>\r\n        <Col>\r\n          <Pdf targetRef={pdfRef} filename=\"Reporte.pdf\">\r\n            {({ toPdf }) => <Button onClick={toPdf} text=\"Generate Pdf\" />}\r\n          </Pdf>\r\n        </Col>\r\n      </Row>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Reportes\r\n","import React from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const Layout = ({ children }) => {\r\n  return <Container>{children} </Container>\r\n}\r\n\r\nLayout.prototype = {\r\n  children: PropTypes.element.isRequired,\r\n}\r\n","import styled from 'styled-components'\r\nimport { Button, Spinner } from 'react-bootstrap'\r\n\r\nexport const Btn = styled(Button)`\r\n  &&& {\r\n    display: flex;\r\n    margin: auto;\r\n  }\r\n`\r\n\r\nexport const Spinn = styled(Spinner)`\r\n  &&& {\r\n  }\r\n`\r\n","import React, { Fragment } from 'react'\r\nimport { Btn, Spinn } from './styles'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const Button = ({\r\n  text,\r\n  size,\r\n  variant,\r\n  isActive,\r\n  isLoading,\r\n  onClick,\r\n}) => (\r\n  <Btn\r\n    variant={variant || 'primary'}\r\n    size={size}\r\n    disabled={isActive || (isLoading && true)}\r\n    onClick={onClick}\r\n  >\r\n    {isLoading ? (\r\n      <Fragment>\r\n        <Spinn\r\n          as=\"span\"\r\n          animation=\"grow\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n        />\r\n        Cargando...\r\n      </Fragment>\r\n    ) : (\r\n      text\r\n    )}\r\n  </Btn>\r\n)\r\n\r\nButton.prototype = {\r\n  text: PropTypes.string,\r\n  size: PropTypes.string,\r\n  variant: PropTypes.string,\r\n  isActive: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n}\r\n"],"sourceRoot":""}